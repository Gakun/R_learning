install.packages("swirl")
search()
library('swirl')
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
play()
c(TRUE, TRUE, FALSE) && c(TRUE, TRUE, TRUE)
nxt()
TRUE | c(TRUE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 5)
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
play()
length()
nxt()
submit()
play()
my_mean <- function(my_vector) {
# Write your code here!
# Remember: the last expression evaluated will be returned!
sum(my_vector) / length(my_vector)
}
my_mean(c(1,2,3))
nxt()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
??standard dviation
?starndard
??deviation
evaluate(st, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[-1]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram(124)
submit()
mad_libs(place = 'A', adjective = 'B', noun = 'C')
submit()
'I' %p% 'love' %p% 'R!'
d1 <= Sys.Date()
d1 <- Sys.Date()
class(d1)
d1
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
?unclass
weekdays(d1)
months(t1)
quarters(t1)
quarters(t2)
ts <- "October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 < -strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
sys.time() > t1
Sys.time() > t1
Sys.time() - t1
dfftime(Sys.time(), t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
x <- 1:10
if(x > 5) {
x <- 0
}
?if
??if
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
setwd('Desktop/R_learning/R_programming/week2')
source('~/Desktop/R_learning/R_programming/week2/complete.R')
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
read.csv("specdata/001.csv")
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
?cor
cr <- corr("specdata", 400)
head(cr)
a <- complete('specdata')
a
a["nobs" > 150]
class(a)
class(a['nobs'])
class(a[['nobs'])
class(a[['nobs']])
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
source('~/Desktop/R_learning/R_programming/week2/corr.R')
source('~/Desktop/R_learning/R_programming/week2/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
?summary
cr <- corr("specdata", 400)
head(cr)
source('~/Desktop/R_learning/R_programming/week2/corr.R')
source('~/Desktop/R_learning/R_programming/week2/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
final.dataset <- data.frame()
for (i in id) {
dataset <- read.csv(paste(directory, "/", formatC(i, width=3, flag="0"), '.csv', sep = ""))
final.dataset <- rbind(final.dataset, dataset)
}
final.data <- final.dataset[[pollutant]]
mean(final.data[!is.na(final.data)])
}
source('~/Desktop/R_learning/R_programming/week2/pollutantmean.R')
pollutantmean("specdata", "nitrate")
source('~/Desktop/R_learning/R_programming/week2/complete.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
source('~/Desktop/R_learning/R_programming/week2/corr.R')
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
?set.seed
set.seed(42)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
